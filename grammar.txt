Stmts -> Stmt ; Stmts
      -> Stmt

Stmt -> Var = Expr
     -> print Expr
     -> break
     -> Expr

Expr -> Expr1  > Expr
     -> Expr1 >= Expr
     -> Expr1 == Expr
     -> Expr1

Expr1 -> Expr2 + Expr1
      -> Expr2 - Expr1
      -> Expr2

Expr2 -> Expr3 * Expr2
      -> Expr3 / Expr2
      -> Expr3

Expr3 -> if Expr then Expr else Expr
      -> let Decls in Expr
      -> fst Expr
      -> snd Expr
      -> atom Expr
      -> Expr4

Expr4 -> \Vars -> Expr
         Expr5

Expr5 -> Expr6 Tuple
      -> Expr6

Expr6 -> Var
      -> Val
      -> Tuple

Tuple -> (Expr [, Expr]*)
